@model Mtelpligent.Dashboard.Web.ViewModels.ExperimentViewModel

@{
    string errorMessage = ViewBag.ErrorMessage ?? "";
}

<div class="content">
  <div class="row">

    <h1>Edit Experiment</h1>

      
      @using (Html.BeginForm("Update", "Experiments", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "expForm" }))
      {
           @Html.AntiForgeryToken()
           @Html.ValidationSummary(true)

            if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }
        
            <div class="form-group">
            @Html.LabelFor(m => m.Experiment.Name, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Experiment.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Experiment.Name)
            </div>
            </div>
           <div class="form-group">
            @Html.LabelFor(m => m.Experiment.SystemName, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                    @Html.TextBoxFor(m => m.Experiment.SystemName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Experiment.SystemName)
            </div>
            </div>
            <div class="form-group">
            @Html.LabelFor(m => m.Experiment.TargetCohortId, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-10">
                    @Html.DropDownListFor(m => m.Experiment.TargetCohortId, new SelectList(Model.Cohorts, "Id", "Name"), "Select a Cohort", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Experiment.TargetCohortId)
            </div>
            </div>
          
            <div data-bind="foreach: variables">
                <div class="form-group">
                    <label class="col-sm-2 control-label" for="variable-1" data-bind="text: $index() == 0 ? 'Variables' : ''"></label>
                    <div class="col-sm-10">
                        <span class="glyphicon glyphicon-plus" data-bind="click: viewModel.addVariable" title="Add Another" style="position:absolute; right:-5px; margin-top:7px; margin-left:10px; cursor:pointer"></span> <input class="form-control" data-val="false" data-bind="    attr: { id: 'variable-' + $index(), name: 'variable-' + $index() }, value : $data, disable: $index() < viewModel.initalVariableCount()" type="text">
                    </div>
                </div>
            </div>
          
            <input type="hidden" id="hidNumVariables" name="hidNumVariables" data-bind="value: variables().length" />
          
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <div><button type="submit" class="btn btn-default">Update Experiment</button></div>
                </div>
            </div>  
      }


      <hr />

      <h2>Experiment Segments</h2>

      <p class="lead">Segments are the different variations that will be presented to your users as part of this experiment. The Default Segment will be shown to users that are not in the target cohort.</p>
          
    @if (Model.Experiment.Segments.Count == 0)
    {
        <div class="alert alert-info">You currently have not configured any segments. Click "Add Segment" to add a segment to this experiment. </div>
    }
    else
    {
        using (Html.BeginForm("UpdateSegments", "Experiments", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "expForm" }))
        {
            
        <table class="table table-striped">
            <tr>
                <th>Name</th>
                <th>System Name</th>
                <th>Target Percentage</th>
                <th>Is Default</th>
                <th>&nbsp;</th>
            </tr>

        @foreach (var segment in Model.Experiment.Segments)
        {
            <tr>
                <td>@segment.Name</td>
                <td>@segment.SystemName</td>
                <td>@segment.TargetPercentage</td>
                <td><input class="form-control" name="@segment.Id-IsDefault" type="checkbox" checked="@segment.IsDefault" /></td>
                <td><a href="/Experiments/UpdateSegment?Id=@segment.Id" class="btn btn-primary btn-lg active" role="button">Edit Details</a></td>
            </tr>
            
        }
        </table>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
                <div><button type="submit" class="btn btn-default">Save Changes</button></div>
            </div>
        </div>  
        }
        
    }

    <a href="/Experiments/AddSegment?Id=@Model.Experiment.Id" class="btn btn-primary btn-lg active" role="button">Add Segment</a>
@section Scripts {
      <script src="~/Scripts/knockout-3.0.0.js"></script>
      <script src="~/Scripts/Experiment.js" ></script>
      <script>
          var variables = @Html.Raw(Json.Encode(Model.Experiment.Variables));

          $(document).ready(function () {
              if ($("#Experiment_SystemName").val() != "") {
                  $("#Experiment_SystemName").attr("disabled", "disabled");
                  $("#Experiment_SystemName").after("<input type='hidden' name='" + $("#Experiment_SystemName").attr("name") + "' value='" + $("#Experiment_SystemName").val() + "'>");
              }

              $.each(variables, function(index, variable){
                  viewModel.variables.push(variable);
              });
              
              viewModel.initalVariableCount(viewModel.variables().length);

              ko.applyBindings(viewModel);
          });

      </script>

}