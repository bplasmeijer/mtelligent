/*
Deployment script for MtelligentDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "MtelligentDB"
:setvar DefaultFilePrefix "MtelligentDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key ccf4b918-4df3-43c0-9ca6-bcf74530ec2e is skipped, element [dbo].[Experiments].[System Name] (SqlSimpleColumn) will not be renamed to SystemName';


GO
PRINT N'Creating [dbo].[Experiments]...';


GO
CREATE TABLE [dbo].[Experiments] (
    [Id]             INT              IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (100)   NOT NULL,
    [SystemName]     NVARCHAR (100)   NOT NULL,
    [UID]            UNIQUEIDENTIFIER NOT NULL,
    [TargetCohortId] INT              NOT NULL,
    [Active]         INT              NOT NULL,
    [CreatedBy]      NVARCHAR (50)    NOT NULL,
    [Created]        DATETIME         NOT NULL,
    [UpdatedBy]      NVARCHAR (50)    NULL,
    [Updated]        DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [CK_Experiments_SystemName_unique] UNIQUE NONCLUSTERED ([SystemName] ASC)
);


GO
PRINT N'Creating [dbo].[ExperimentSegments]...';


GO
CREATE TABLE [dbo].[ExperimentSegments] (
    [Id]               INT              IDENTITY (1, 1) NOT NULL,
    [Name]             NVARCHAR (100)   NOT NULL,
    [SystemName]       NVARCHAR (100)   NOT NULL,
    [UID]              UNIQUEIDENTIFIER NOT NULL,
    [TargetPercentage] FLOAT (53)       NOT NULL,
    [IsDefault]        INT              NOT NULL,
    [ExperimentId]     INT              NOT NULL,
    [CreatedBy]        NVARCHAR (50)    NOT NULL,
    [Created]          DATETIME         NOT NULL,
    [UpdatedBy]        NVARCHAR (50)    NULL,
    [Updated]          DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [CK_ExperimentSegments_SystemName_unique] UNIQUE NONCLUSTERED ([SystemName] ASC)
);


GO
PRINT N'Creating [dbo].[ExperimentSegmentVariableValues]...';


GO
CREATE TABLE [dbo].[ExperimentSegmentVariableValues] (
    [Id]                   INT            IDENTITY (1, 1) NOT NULL,
    [ExperimentSegmentId]  INT            NOT NULL,
    [ExperimentVariableId] INT            NOT NULL,
    [Value]                NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ExperimentVariables]...';


GO
CREATE TABLE [dbo].[ExperimentVariables] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (100) NOT NULL,
    [ExperimentId] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC),
    CONSTRAINT [CK_ExperimentVariables_Name] UNIQUE NONCLUSTERED ([Id] ASC, [Name] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[Experiments]....';


GO
ALTER TABLE [dbo].[Experiments]
    ADD DEFAULT newID() FOR [UID];


GO
PRINT N'Creating Default Constraint on [dbo].[Experiments]....';


GO
ALTER TABLE [dbo].[Experiments]
    ADD DEFAULT 1 FOR [Active];


GO
PRINT N'Creating Default Constraint on [dbo].[ExperimentSegments]....';


GO
ALTER TABLE [dbo].[ExperimentSegments]
    ADD DEFAULT newID() FOR [UID];


GO
PRINT N'Creating Default Constraint on [dbo].[ExperimentSegments]....';


GO
ALTER TABLE [dbo].[ExperimentSegments]
    ADD DEFAULT 0 FOR [TargetPercentage];


GO
PRINT N'Creating Default Constraint on [dbo].[ExperimentSegments]....';


GO
ALTER TABLE [dbo].[ExperimentSegments]
    ADD DEFAULT 0 FOR [IsDefault];


GO
PRINT N'Creating Default Constraint on [dbo].[ExperimentSegmentVariableValues]....';


GO
ALTER TABLE [dbo].[ExperimentSegmentVariableValues]
    ADD DEFAULT '' FOR [Value];


GO
PRINT N'Creating FK_Experiments_ToCohorts...';


GO
ALTER TABLE [dbo].[Experiments] WITH NOCHECK
    ADD CONSTRAINT [FK_Experiments_ToCohorts] FOREIGN KEY ([TargetCohortId]) REFERENCES [dbo].[Cohorts] ([Id]);


GO
PRINT N'Creating FK_ExperimentSegments_ToExperiments...';


GO
ALTER TABLE [dbo].[ExperimentSegments] WITH NOCHECK
    ADD CONSTRAINT [FK_ExperimentSegments_ToExperiments] FOREIGN KEY ([ExperimentId]) REFERENCES [dbo].[Experiments] ([Id]);


GO
PRINT N'Creating FK_ExperimentSegmentVariableValues_ToExperimentSegments...';


GO
ALTER TABLE [dbo].[ExperimentSegmentVariableValues] WITH NOCHECK
    ADD CONSTRAINT [FK_ExperimentSegmentVariableValues_ToExperimentSegments] FOREIGN KEY ([ExperimentSegmentId]) REFERENCES [dbo].[ExperimentSegments] ([Id]);


GO
PRINT N'Creating FK_ExperimentSegmentVariableValues_ToExperimentVariables...';


GO
ALTER TABLE [dbo].[ExperimentSegmentVariableValues] WITH NOCHECK
    ADD CONSTRAINT [FK_ExperimentSegmentVariableValues_ToExperimentVariables] FOREIGN KEY ([ExperimentVariableId]) REFERENCES [dbo].[ExperimentVariables] ([Id]);


GO
PRINT N'Creating FK_ExperimentVariables_ToExperiments...';


GO
ALTER TABLE [dbo].[ExperimentVariables] WITH NOCHECK
    ADD CONSTRAINT [FK_ExperimentVariables_ToExperiments] FOREIGN KEY ([ExperimentId]) REFERENCES [dbo].[Experiments] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ccf4b918-4df3-43c0-9ca6-bcf74530ec2e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ccf4b918-4df3-43c0-9ca6-bcf74530ec2e')

GO

GO
Select * from Cohorts where Type = 'Mtelligent.Entities.Cohorts.AllUsersCohort, Mtelligent.Entities';

if (@@ROWCOUNT = 0)
begin

Insert into Cohorts (Name, SystemName, Type, Created, CreatedBy) Values ('All Users', 'All users', 'Mtelligent.Entities.Cohorts.AllUsersCohort, Mtelligent.Entities', getDate(), 'System')

end

Select * from Cohorts where Type = 'Mtelligent.Entities.Cohorts.AuthenticatedUsersCohort, Mtelligent.Entities';

if (@@ROWCOUNT = 0)
begin

Insert into Cohorts (Name, SystemName, Type, Created, CreatedBy) Values ('Authenticated Users', 'Authenticated users', 'Mtelligent.Entities.Cohorts.AuthenticatedUsersCohort, Mtelligent.Entities', getDate(), 'System')

end

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Experiments] WITH CHECK CHECK CONSTRAINT [FK_Experiments_ToCohorts];

ALTER TABLE [dbo].[ExperimentSegments] WITH CHECK CHECK CONSTRAINT [FK_ExperimentSegments_ToExperiments];

ALTER TABLE [dbo].[ExperimentSegmentVariableValues] WITH CHECK CHECK CONSTRAINT [FK_ExperimentSegmentVariableValues_ToExperimentSegments];

ALTER TABLE [dbo].[ExperimentSegmentVariableValues] WITH CHECK CHECK CONSTRAINT [FK_ExperimentSegmentVariableValues_ToExperimentVariables];

ALTER TABLE [dbo].[ExperimentVariables] WITH CHECK CHECK CONSTRAINT [FK_ExperimentVariables_ToExperiments];


GO
PRINT N'Update complete.';


GO
